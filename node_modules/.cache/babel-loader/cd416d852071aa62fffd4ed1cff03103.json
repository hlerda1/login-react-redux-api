{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\mrcle\\\\Desktop\\\\login-react-redux-api\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nconst initialState = {\n  email: undefined,\n  password: undefined,\n  logged: false,\n  message: undefined,\n  isLogging: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ON_CHANGE_EMAIL':\n      return _objectSpread({}, state, {\n        email: action.payload,\n        logged: false,\n        message: undefined\n      });\n\n    case 'ON_CHANGE_PASSWORD':\n      return _objectSpread({}, state, {\n        password: action.payload,\n        logged: false,\n        message: undefined\n      });\n\n    case 'LOGIN_PENDING':\n      return _objectSpread({}, state, {\n        isLogging: true\n      });\n\n    case 'LOGIN_SUCCESS':\n      return _objectSpread({}, state, {\n        isLogging: false,\n        logged: action.payload.success,\n        message: action.payload.message\n      });\n\n    case 'LOGIN_ERROR':\n      return _objectSpread({}, state, {\n        isLogging: false,\n        message: action.payload.message\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport const onChangeEmail = event => {\n  const text = event.target.value;\n  return {\n    type: 'ON_CHANGE_EMAIL',\n    payload: text\n  };\n};\nexport const onChangePassword = event => {\n  const text = event.target.value;\n  return {\n    type: 'ON_CHANGE_PASSWORD',\n    payload: text\n  };\n};\nexport const handleLogin = (email, password) => {\n  return dispatch => {\n    dispatch({\n      type: 'LOGIN_PENDING'\n    });\n    const options = {\n      baseURL: 'https://trabajo-mcga-server-lerda.herokuapp.com/',\n      timeout: 25000,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    return fetch(\"https://trabajo-mcga-server-lerda.herokuapp.com/login\", _objectSpread({}, options, {\n      body: JSON.stringify({\n        email,\n        password\n      })\n    })).then(res => res.json()).then(data => {\n      if (!data.success) {\n        return Promise.reject(data);\n      }\n\n      return dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: data\n      });\n    }).catch(error => {\n      return dispatch({\n        type: 'LOGIN_ERROR',\n        payload: error\n      });\n    });\n  };\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:\\Users\\mrcle\\Desktop\\login-react-redux-api\\src\\store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","thunk","initialState","email","undefined","password","logged","message","isLogging","reducer","state","action","type","payload","success","onChangeEmail","event","text","target","value","onChangePassword","handleLogin","dispatch","options","baseURL","timeout","method","headers","fetch","body","JSON","stringify","then","res","json","data","Promise","reject","catch","error","middleware","store"],"mappings":"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","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nconst initialState = {\n  email: undefined,\n  password: undefined,\n  logged: false,\n  message: undefined,\n  isLogging: false,\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ON_CHANGE_EMAIL':\n      return {\n        ...state,\n        email: action.payload,\n        logged: false,\n        message: undefined\n      }\n    case 'ON_CHANGE_PASSWORD':\n      return {\n        ...state,\n        password: action.payload,\n        logged: false,\n        message: undefined\n      }\n    case 'LOGIN_PENDING':\n      return {\n        ...state,\n        isLogging: true,\n      }\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        isLogging: false,\n        logged: action.payload.success,\n        message: action.payload.message,\n      }\n    case 'LOGIN_ERROR':\n      return {\n        ...state,\n        isLogging: false,\n        message: action.payload.message,\n      }\n    default:\n      return state\n  }\n}\n\nexport const onChangeEmail = (event) => {\n  const text = event.target.value\n  return {\n    type: 'ON_CHANGE_EMAIL',\n    payload: text\n  }\n}\n\nexport const onChangePassword = (event) => {\n  const text = event.target.value\n  return {\n    type: 'ON_CHANGE_PASSWORD',\n    payload: text\n  }\n}\n\nexport const handleLogin = (email, password) => {\n\n  return (dispatch) => {\n    dispatch({\n      type: 'LOGIN_PENDING',\n    })\n\n    const options = {\n      baseURL: 'https://trabajo-mcga-server-lerda.herokuapp.com/',\n      timeout: 25000,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    return fetch(`https://trabajo-mcga-server-lerda.herokuapp.com/login`, { ...options, body: JSON.stringify({ email, password }) })\n      .then(res => res.json())\n      .then(data => {\n        if (!data.success) {\n          return Promise.reject(data)\n        }\n        return dispatch({\n          type: 'LOGIN_SUCCESS',\n          payload: data,\n        })\n      })\n      .catch(error => {\n        return dispatch({\n          type: 'LOGIN_ERROR',\n          payload: error,\n        })\n      })\n  }\n\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, composeWithDevTools(\n  applyMiddleware(...middleware),\n));\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}